{
  "name": "ABL Comment Detector Rules",
  "version": "1.0.0",
  "rules": [
    {
      "name": "verify-execution-path",
      "description": "Ensures the ABL Comment Detector is always executed from the project root directory",
      "on": {
        "trigger": "beforeCommand",
        "command": "dotnet run"
      },
      "do": {
        "type": "script",
        "script": "#!/bin/bash\n\n# Get the current working directory\nCURRENT_DIR=$(pwd)\n\n# Get the project root directory (where .cursorrc is located)\nPROJECT_ROOT=$(dirname \"$CURSOR_RULE_FILE\")\n\n# Check if we're in the project root or in the src/CSharp directory\nif [[ \"$CURRENT_DIR\" != \"$PROJECT_ROOT\" && \"$CURRENT_DIR\" != \"$PROJECT_ROOT/src/CSharp\" ]]; then\n  echo \"\\033[0;31mError:\\033[0m The ABL Comment Detector must be run from the project root directory.\"\n  echo \"Please change to the project root directory and run:\"\n  echo \"  cd $PROJECT_ROOT\"\n  echo \"  dotnet run --project src/CSharp/AblCommentDetector.csproj -- <arguments>\"\n  exit 1\nfi\n\n# If in project root, make sure to use the --project flag\nif [[ \"$CURRENT_DIR\" == \"$PROJECT_ROOT\" && ! \"$CURSOR_COMMAND\" =~ --project ]]; then\n  echo \"\\033[0;33mWarning:\\033[0m Running from project root requires specifying the project.\"\n  echo \"Command modified to: dotnet run --project src/CSharp/AblCommentDetector.csproj ${CURSOR_COMMAND#dotnet run}\"\n  CURSOR_COMMAND=\"dotnet run --project src/CSharp/AblCommentDetector.csproj ${CURSOR_COMMAND#dotnet run}\"\nfi\n\n# Continue with the command\nexit 0"
      }
    },
    {
      "name": "run-verification-after-changes",
      "description": "Verify results when C# files are saved",
      "on": {
        "trigger": "afterSaveFile",
        "pattern": "**/*.cs"
      },
      "do": {
        "type": "prompt",
        "message": "C# code has been modified. Do you want to verify the results?",
        "options": ["Yes", "No"],
        "then": {
          "if": "Yes",
          "do": {
            "type": "command",
            "command": "./src/Shell/verify-results.sh"
          }
        }
      }
    },
    {
      "name": "ensure-analysis-test-data-consistency",
      "description": "Ensures analysis-result.txt and compare-test-data.txt files always match",
      "on": {
        "trigger": "afterSaveFile",
        "pattern": "outputs/analysis-result.txt"
      },
      "do": {
        "type": "script",
        "script": "#!/bin/bash\n\n# Get the project root directory (where .cursorrc is located)\nPROJECT_ROOT=$(dirname \"$CURSOR_RULE_FILE\")\n\n# Check if the files are identical\nif ! cmp -s \"$PROJECT_ROOT/outputs/analysis-result.txt\" \"$PROJECT_ROOT/tests/compare-test-data.txt\"; then\n  echo \"\\033[0;31mError:\\033[0m analysis-result.txt and compare-test-data.txt don't match!\"\n  echo \"Reverting changes to analysis-result.txt...\"\n  # Copy the test data back to the analysis result to revert\n  cp \"$PROJECT_ROOT/tests/compare-test-data.txt\" \"$PROJECT_ROOT/outputs/analysis-result.txt\"\n  echo \"\\033[0;32mReverted:\\033[0m analysis-result.txt has been restored to match compare-test-data.txt\"\nelse\n  echo \"\\033[0;32mSuccess:\\033[0m analysis-result.txt and compare-test-data.txt are in sync.\"\nfi\n\nexit 0"
      }
    },
    {
      "name": "ensure-test-data-analysis-consistency",
      "description": "Ensures compare-test-data.txt and analysis-result.txt files always match",
      "on": {
        "trigger": "afterSaveFile",
        "pattern": "tests/compare-test-data.txt"
      },
      "do": {
        "type": "script",
        "script": "#!/bin/bash\n\n# Get the project root directory (where .cursorrc is located)\nPROJECT_ROOT=$(dirname \"$CURSOR_RULE_FILE\")\n\n# Check if the files are identical\nif ! cmp -s \"$PROJECT_ROOT/tests/compare-test-data.txt\" \"$PROJECT_ROOT/outputs/analysis-result.txt\"; then\n  echo \"\\033[0;31mError:\\033[0m compare-test-data.txt and analysis-result.txt don't match!\"\n  echo \"Reverting changes to compare-test-data.txt...\"\n  # Copy the analysis result back to the test data to revert\n  cp \"$PROJECT_ROOT/outputs/analysis-result.txt\" \"$PROJECT_ROOT/tests/compare-test-data.txt\"\n  echo \"\\033[0;32mReverted:\\033[0m compare-test-data.txt has been restored to match analysis-result.txt\"\nelse\n  echo \"\\033[0;32mSuccess:\\033[0m compare-test-data.txt and analysis-result.txt are in sync.\"\nfi\n\nexit 0"
      }
    }
  ]
} 